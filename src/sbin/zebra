#!/bin/sh
#
# Copyright (c) 2015 Jesco Freund
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ZEBRAPATH=$(/bin/realpath $0)
ZEBRAPREFIX=${ZEBRAPATH%\/sbin/*}
ZEBRAPREFIX=${ZEBRAPREFIX}/share/zebra

# Zebra version
ZEBRA_VERSION="0.1-pre"

# undocumented flag for debugging purposes only
ZB_SETX=""

# increment or decrement for the log level
ZB_LOG_INCREMENT=0

while getopts "de:NSVvx" FLAG; do
    case ${FLAG} in
        d)
            ZB_LOG_INCREMENT=5
            ;;
        e)
            if [ ! -d "${OPTARG}" ]; then
                [ "${ZB_SILENT}" = "yes" ] || \
                    echo "Error: argument '${OPTARG}' is not a directory"
                exit 1
            fi
            export ZEBRA_ETC=${OPTARG}
            ;;
        N)
            ZB_USE_COLORS="no"
            ;;
        S)
            ZB_LOG_INCREMENT=-5
            ;;
        V)
            ZB_LOG_INCREMENT=$((${ZB_LOG_INCREMENT}-1))
            ;;
        v)
            ZB_LOG_INCREMENT=$((${ZB_LOG_INCREMENT}+1))
            ;;
        x)
            ZB_SETX="-x"
            ;;
        *)
            CMD=help
            ZEBRA_STATUS=1
            ;;
    esac
done

shift $((OPTIND-1))
[ $# -lt 1 ] && CMD=help && ZEBRA_STATUS=1

: ${CMD:=$1}
shift

case "${CMD}" in
    help|init|backup|restore|version)
        ;;
    *)
        CMD=help
        ZEBRA_STATUS=1
        ;;
esac

CMD_ENV="PATH=${PATH} ZEBRA_VERSION=${ZEBRA_VERSION}"
[ -n "${ZEBRA_ETC}" ] && CMD_ENV="${CMD_ENV} ZEBRA_ETC=${ZEBRA_ETC}"
[ -n "${ZEBRA_STATUS}" ] && CMD_ENV="${CMD_ENV} ZEBRA_STATUS=${ZEBRA_STATUS}"
[ -n "${ZB_USE_COLORS}" ] && CMD_ENV="${CMD_ENV} ZB_USE_COLORS=${ZB_USE_COLORS}"
[ -n "${ZB_LOG_INCREMENT}" ] && CMD_ENV="${CMD_ENV} ZB_LOG_INCREMENT=${ZB_LOG_INCREMENT}"

exec env -i ${CMD_ENV} /bin/sh ${ZB_SETX} "${ZEBRAPREFIX}/${CMD}.sh" $@
